<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.0.1">
<procedure name="main">
<interface/>
<body>
<l>dev_open_window (0, 0, 1280, 720, 'black', WindowHandle)</l>
<l>dev_set_window (WindowHandle)</l>
<c></c>
<l>read_image (Image1, 'C:/Users/maksi/Desktop/file.jpg')</l>
<l>gen_rectangle1 (ROI_0, 45.5, 285, 644.5, 1047)</l>
<c></c>
<c></c>
<l>reduce_domain (Image1, ROI_0, ImageReduced)</l>
<l>inspect_shape_model (ImageReduced, ModelImaged, ModelRegions, 1, 150)</l>
<l>create_shape_model (ImageReduced, 'auto', rad(0), rad(360), 0.0005, 'auto', 'use_polarity', 100, 'auto', ModelID1)</l>
<l>find_shape_model (Image1, ModelID1, rad(0), rad(360), 0.5, 1, 0.5, 'least_squares', 0, 0.9, Row, Column, Angle, Score)</l>
<l>get_shape_model_contours (ModelContours1, ModelID1, 1)</l>
<l>vector_angle_to_rigid (0, 0, 0, Row, Column, Angle, HomMat2D)</l>
<l>affine_trans_contour_xld (ModelContours1, ContoursAffineTrans, HomMat2D)</l>
<c></c>
<l>find_shape_models (Image1, ModelID1, rad(0), rad(360), 0.1, 1, 0.8, 'least_squares_high', 0, 0.8, Row1, Column1, Angle1, Score1, Model)</l>
<c></c>
<c></c>
<c></c>
<l>read_image (Image2, 'C:/Users/maksi/Desktop/file2.jpg')</l>
<l>gen_rectangle1 (ROI_0, 45.5, 285, 644.5, 1047)</l>
<c></c>
<l>reduce_domain (Image2, ROI_0, ImageReduced2)</l>
<l>inspect_shape_model (ImageReduced2, ModelImaged, ModelRegions, 1, 150)</l>
<l>create_shape_model (ImageReduced2, 'auto', rad(0), rad(360), 0.0005, 'point_reduction_high', 'use_polarity', 110, 'auto', ModelID2)</l>
<l>find_shape_model (Image2, ModelID2, rad(0), rad(360), 0.5, 1, 0.5, 'least_squares', 0, 0.9, Row, Column, Angle, Score)</l>
<l>get_shape_model_contours (ModelContours2, ModelID2, 1)</l>
<l>vector_angle_to_rigid (0, 0, 0, Row, Column, Angle, HomMat2D)</l>
<l>affine_trans_contour_xld (ModelContours2, ContoursAffineTrans, HomMat2D)</l>
<c></c>
<c></c>
<l>read_image (Image3, 'C:/Users/maksi/Desktop/file3.jpg')</l>
<c></c>
<l>find_shape_models (Image3, ModelID2, rad(0), rad(360), 0.1, 1, 0.8, 'least_squares_high', 0, 0.8, Row1, Column1, Angle1, Score1, Model)</l>
<c></c>
<l>for Index := 0 to |Score1|-1 by 1</l>
<l>    vector_angle_to_rigid (0,0,0, Row1[Index], Column1[Index], Angle1[Index], HomMat2D1)</l>
<l>    affine_trans_contour_xld(ModelContours2, ContoursAffineTrans0, HomMat2D1)</l>
<l>    set_tposition (WindowHandle, Row1[Index], Column1[Index])</l>
<l>    set_display_font(WindowHandle, 50, 'mono', 'true', 'false')</l>
<l>    write_string(WindowHandle, 'Адын')</l>
<l>endfor</l>
<c></c>
<l>find_shape_models (Image3, ModelID1, rad(0), rad(360), 0.1, 1, 0.8, 'least_squares_high', 0, 0.8, Row1, Column1, Angle1, Score1, Model)</l>
<c></c>
<l>for Index := 0 to |Score1|-1 by 1</l>
<l>    vector_angle_to_rigid (0,0,0, Row1[Index], Column1[Index], Angle1[Index], HomMat2D1)</l>
<l>    affine_trans_contour_xld(ModelContours1, ContoursAffineTrans0, HomMat2D1)</l>
<l>    set_tposition (WindowHandle, Row1[Index], Column1[Index])</l>
<l>    set_display_font(WindowHandle, 50, 'mono', 'true', 'false')</l>
<l>    write_string(WindowHandle, 'Два')</l>
<l>endfor</l>
<c></c>
<l>write_shape_model (ModelID1, 'metal_part_1.shm')</l>
<l>write_shape_model (ModelID2, 'metal_part_2.shm')</l>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
